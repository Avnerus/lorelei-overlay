#!/sbin/runscript
# Copyright 1999-2007 Gentoo Foundation
# Distributed under the terms of the GNU General Public License v2
# Hacked from openvpn initscript by Ronan Bignaux
# TODO : manage up/down scripts

VPNDIR=${VPNDIR:-/etc/vpzone}
VPN=${SVCNAME#*.}
if [ -n "${VPN}" ] && [ ${SVCNAME} != "vpzone" ]; then
	VPNPID="/var/run/vpzone/${VPN}.pid"
else
	VPNPID="/var/run/vpzone/vpzone.pid"
fi

VPNCONF="${VPNDIR}/${VPN}.conf"
USER=$(grep --word-regexp user "${VPNCONF}" | cut -d' ' -f 2)
GROUP=$(grep --word-regexp group "${VPNCONF}" | cut -d' ' -f 2)

# Check for OpenRC/Baselayout 2 - see bug #270646
is_openrc() {
    [ -f /lib/librc.so -o -f /etc/init.d/sysfs -o -f /lib/rc/version ]
}

depend() {
	need localmount net
	use dns 
	after bootmisc
}

checkconfig() {
	# Linux has good dynamic tun/tap creation
	if [ $(uname -s) = "Linux" ] ; then
		if [ ! -e /dev/net/tun ]; then
			if ! modprobe tun ; then
				eerror "TUN/TAP support is not available" \
					"in this kernel"
				return 1
			fi
		fi
		if [ -h /dev/net/tun ] && [ -c /dev/misc/net/tun ]; then
			ebegin "Detected broken /dev/net/tun symlink, fixing..."
			rm -f /dev/net/tun
			ln -s /dev/misc/net/tun /dev/net/tun
			eend $?
		fi
		return 0
	fi

	# Other OS's don't, so we rely on a pre-configured interface
	# per vpn instance
	local ifname=$(sed -n -e 's/[[:space:]]*dev[[:space:]][[:space:]]*\([^[:space:]]*\).*/\1/p' "${VPNCONF}")
	if [ -z ${ifname} ] ; then
		eerror "You need to specify the interface that this vpzone" \
			"instance should use" \
			"by using the dev option in ${VPNCONF}"
		return 1
	fi

	if ! ifconfig "${ifname}" >/dev/null 2>/dev/null ; then
		# Try and create it
		echo > /dev/"${ifname}" >/dev/null
	fi
	if ! ifconfig "${ifname}" >/dev/null 2>/dev/null ; then
		eerror "${VPNCONF} requires interface ${ifname}" \
			"but that does not exist"
		return 1
	fi
}

start() {

	if is_openrc; then
		logfile=${logfile:-/var/log/vpzone/${VPN}.log}
		logfile_opt=""
		if [ -n "${logfile}" ]; then
			logfile_opt="--stdout ${logfile} --stderr ${logfile}"
		fi	
		if [ ! -f ${logfile} ]; then
			einfo "No ${logfile} around. Creating new..."
			touch ${logfile}
			chown ${USER}:${GROUP} ${logfile}
		fi
	fi

	ebegin "Starting ${SVCNAME}"

	checkconfig || return 1

	# /!\ we use  --background still vpzone -d option make it fork() so pidfile is wrong, and vpzone verbose on console. 
	start-stop-daemon --start  --pidfile "${VPNPID}" ${logfile_opt} \
		--make-pidfile --background --exec /usr/bin/vpzone -- -f "${VPNCONF}"
	eend $? "Check your logs to see why startup failed"
}


stop() {
	ebegin "Stopping ${SVCNAME}"
	start-stop-daemon --stop --quiet --pidfile "${VPNPID}"
	if [ -f /var/run/vpzone/babeld.${VPN}.pid ]; then
		einfo "Stopping ${VPN} babeld instance."
		start-stop-daemon --stop --quiet --pidfile /var/run/vpzone/babeld.${VPN}.pid
	fi
	eend $?	
}

# vim: set ts=4 :
